# generic components
set build_components {
	core init
	drivers/timer
	drivers/sd_card
	server/part_blk
	server/ffat_fs
	test/sd_card_ffat
}

build $build_components
create_boot_directory



set config  {
	<config>
		<parent-provides>
			<service name="ROM"/>
			<service name="RAM"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="CAP"/>
			<service name="PD"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="LOG"/>
			<service name="SIGNAL"/>
		</parent-provides>
		<default-route>
			<any-service> <parent/> <any-child/> </any-service>
		</default-route>
		<start name="timer">
			<resource name="RAM" quantum="1M"/>
			<provides><service name="Timer"/></provides>
		</start>
		<start name="sd_card_drv">
			<resource name="RAM" quantum="4M"/>
			<provides><service name="Block"/></provides>
		</start>
		<start name="part_blk">
			<resource name="RAM" quantum="2M"/>
			<provides><service name="Block"/></provides>
			<config>
				<policy label="ffat_fs" partition="1" />
			</config>
			<route>
				<service name="Block"> <child name="sd_card_drv"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>
		<start name="ffat_fs">
			<resource name="RAM" quantum="10M"/>
			<provides><service name="File_system"/></provides>
			<config>
			<!-- constrain sessions according to their labels -->
			<policy label="test-sd_card_ffat" root="/" writeable="yes" />
			</config>
			<route>
				<service name="Block"> <child name="part_blk"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>
		<start name="test-sd_card_ffat">
		    <resource name="RAM" quantum="10M"/>
		</start>
	</config>
}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init
	timer
	sd_card_drv
	part_blk
	ffat_fs
	test-sd_card_ffat
	ld.lib.so libc.lib.so libc_fs.lib.so libc_log.lib.so
}

build_boot_image $boot_modules

run_genode_until forever

