#
# Build
#

set build_components {
	core init
	drivers/timer
	server/nitpicker server/liquid_framebuffer app/launchpad app/scout
	test/nitpicker server/nitlog
	drivers/framebuffer drivers/pci drivers/input
	noux lib/libc_noux
}

#build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append_if [have_spec pci] config {
	<start name="pci_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="PCI"/></provides>
	</start>}

append_if [have_spec vesa] config {
	<start name="vesa_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec pl11x] config {
	<start name="pl11x_drv">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
		<route>
			<any-service><child name="fb_sdl"/><any-child/><parent/></any-service>
		</route>
	</start>
	<start name="liquid_fb">
		<resource name="RAM" quantum="7M"/>
		<provides><service name="Input"/><service name="Framebuffer"/></provides>
		<config>
			<animate>off</animate>
			<title>VIM</title>
			<x>70</x><y>50</y>
			<width>700</width>
			<height>500</height>
		</config>
	</start>
	<start name="terminal">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Terminal"/></provides>
		<config>
			<keyboard layout="de"/>
		</config>
		<route>
			<any-service><child name="liquid_fb"/><any-child/><parent/></any-service>
		</route>
	</start>
	<start name="noux">
		<resource name="RAM" quantum="1G"/>
		<config>
			<fstab> <tar name="vim.tar" at="/"/> </fstab>
			<start name="/bin/vim">
				<env name="TERM" value="linux" />

				<!-- Deactivate the loading of plugins. Otherwise, vim will
				     attempt to use a sub shell for pattern matching -->
				<arg value="--noplugin" />

				<!-- Do not use swap file. Any attempt to create of would
				     fail because we are on a read-only file system -->
				<arg value="-n" />

				<!-- Use the nocompatible mode, which is much nicer than
				     the plain vi mode -->
				<arg value="-N" />

				<!-- Permanently display status bar -->
				<arg value="--cmd" />
				<arg value="set laststatus=2" />

				<!-- Enable highlighted search results -->
				<arg value="--cmd" />
				<arg value="set hls" />
			</start>
		</config>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init
	timer
	nitpicker liquid_fb
	core init timer ld.lib.so noux terminal
	libc.lib.so libm.lib.so libc_noux.lib.so ncurses.lib.so
	vim.tar
}

# platform-specific modules
lappend_if [have_spec linux] boot_modules fb_sdl
lappend_if [have_spec pci]   boot_modules pci_drv
lappend_if [have_spec vesa]  boot_modules vesa_drv
lappend_if [have_spec ps2]   boot_modules ps2_drv
lappend_if [have_spec pl11x] boot_modules pl11x_drv

build_boot_image $boot_modules

append qemu_args " -m 256 "

run_genode_until forever
